apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodebb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodebb
  template:
    metadata:
      labels:
        app: nodebb
    spec:
      initContainers:
        - name: init-config
          image: busybox
          command:
            - /bin/sh
            - -c
            - |
              if [ ! -f /mnt/config/config.json ]; then
                echo "Injecting initial config..."
                cp /mnt/source/config.json /mnt/config/config.json
              fi
          volumeMounts:
            - name: config-volume
              mountPath: /mnt/config
            - name: configmap-volume
              mountPath: /mnt/source

      containers:
        - name: nodebb
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 4567
          env:
            - name: CONFIG
              value: "/opt/config/config.json" # âœ… NodeBB expects this
            - name: PACKAGE_MANAGER
              value: "npm"
            - name: SETUP
              value: "{{ .Values.nodebb.setup }}" # optional, NodeBB checks it
          volumeMounts:
            - name: config-volume
              mountPath: /opt/config

      volumes:
        - name: config-volume
          persistentVolumeClaim:
            claimName: nodebb-config
        - name: configmap-volume
          configMap:
            name: nodebb-configmap
