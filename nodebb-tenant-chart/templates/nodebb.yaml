apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nodebb-uploads-{{ .Values.tenant }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.persistence.nodebb.size | default "10Gi" }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nodebb-shared-{{ .Values.tenant }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.persistence.nodebb.sharedSize | default "2Gi" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodebb-{{ .Values.tenant }}
spec:
  selector:
    matchLabels:
      app: nodebb-{{ .Values.tenant }}
  template:
    metadata:
      labels:
        app: nodebb-{{ .Values.tenant }}
    spec:
      containers:
        - name: nodebb
          image: elestio/nodebb:latest
          ports:
            - containerPort: 4567
          env:
            - name: NODE_ENV
              value: production
          command:
            - /bin/sh
            - -c
            - |
              if [ -f /mnt/shared/config/config.json ]; then
                echo "Using persisted config.json"
                cp /mnt/shared/config/config.json /app/config.json
              fi
              ./nodebb build || true
              ./nodebb start
          volumeMounts:
            - name: uploads
              mountPath: /app/public/uploads
            - name: shared-storage
              mountPath: /app/data
            - name: shared-storage
              mountPath: /mnt/shared
      volumes:
        - name: uploads
          persistentVolumeClaim:
            claimName: nodebb-uploads-{{ .Values.tenant }}
        - name: shared-storage
          persistentVolumeClaim:
            claimName: nodebb-shared-{{ .Values.tenant }}
---
apiVersion: v1
kind: Service
metadata:
  name: nodebb-{{ .Values.tenant }}
spec:
  selector:
    app: nodebb-{{ .Values.tenant }}
  ports:
    - port: 80
      targetPort: 4567
  type: {{ .Values.service.type | default "LoadBalancer" }}
